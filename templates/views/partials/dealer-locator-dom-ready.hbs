<script type="text/javascript">
    $(document).ready(function () {

		var initControls = function (map) {

			var inputContainer = document.getElementById('pac-input-container');
			var inputSelector = document.getElementById('pac-input-selector');
			var $inputSelector = $('#pac-input-selector');
			var inputName = document.getElementById('pac-input-name');
			var $inputName = $('#pac-input-name');
			$inputSelector.on('change', function(e){
				
				var val = $(e.target).val();
				if(val === 'name'){
					$('#pac-input').css({'display': 'none'});
					$('#pac-input-name').css({'display': 'inline'});
				}else{
					$('#pac-input').css({'display': 'inline'});
					$('#pac-input-name').css({'display': 'none'});
				}
					
			});
			// Create the search box and link it to the UI element.
			var $input = $('#pac-input');
			var input = document.getElementById('pac-input');
			var searchBox = new google.maps.places.SearchBox(input);
			$input.css({'display': 'inline'});
			var filters = document.getElementById('category-filters-container1');
			var locationListContainer = document.getElementById('location-list-container');
			
			map.controls[google.maps.ControlPosition.TOP_CENTER].push(inputContainer);
			//map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);
			//map.controls[google.maps.ControlPosition.TOP_CENTER].push(inputName);
			map.controls[google.maps.ControlPosition.TOP_RIGHT].push(filters);
			map.controls[google.maps.ControlPosition.TOP_LEFT].push(locationListContainer);
			
			// Bias the SearchBox results towards current map's viewport.
			map.addListener('bounds_changed', function() {
				searchBox.setBounds(map.getBounds());
			});

			var markers = [];
			// Listen for the event fired when the user selects a prediction and retrieve
			// more details for that place.
			searchBox.addListener('places_changed', function() {
				var places = searchBox.getPlaces();

				if (places.length == 0) {
					return;
				}

				// Clear out the old markers.
				markers.forEach(function(marker) {
					marker.setMap(null);
				});
				markers = [];

				// For each place, get the icon, name and location.
				var bounds = new google.maps.LatLngBounds();
				places.forEach(function(place) {
					if (!place.geometry) {
						console.log("Returned place contains no geometry");
						return;
					}
					var icon = {
						url: place.icon,
						size: new google.maps.Size(71, 71),
						origin: new google.maps.Point(0, 0),
						anchor: new google.maps.Point(17, 34),
						scaledSize: new google.maps.Size(25, 25)
					};

					// Create a marker for each place.
					markers.push(new google.maps.Marker({
						map: map,
						icon: icon,
						title: place.name,
						position: place.geometry.location
					}));

					if (place.geometry.viewport) {
						// Only geocodes have viewport.
						bounds.union(place.geometry.viewport);
					} else {
						bounds.extend(place.geometry.location);
					}
				});
				map.fitBounds(bounds);
			});
		};

		var filterMarkers = function (markers, category, fitBounds) {
			var categoryMarkers = [];
			var marker;
			
			for (var i = 0; i < markers.length; i++) {
				marker = markers[i];
				// If is same category or category not picked
				if((category === "both") || (category === "distributor" && marker.category === 'distributor' ) || (marker.category === 'dealer'&& category === 'dealer')){
					marker.setVisible(true);
					categoryMarkers.push(marker);
				}
				// Categories don't match 
				else {
					marker.setVisible(false);
				}
			}
			var nameMarkers = [];
			if($('#pac-input-name:visible').length > 0 && $('#pac-input-name').val()){
				
				var nameVal = ($('#pac-input-name').val()).toLowerCase();
				
				for (var i = 0; i < categoryMarkers.length; i++) {
					marker = categoryMarkers[i];
					// If is same category or category not picked
					console.log('name:', nameVal, 'title:', marker.title.toLowerCase() );
					var markerName = marker.title.toLowerCase();
					console.log(markerName.indexOf(nameVal));
					if(markerName.indexOf(nameVal)> -1){
						marker.setVisible(true);
						nameMarkers.push(marker);
					}
					// Categories don't match 
					else {
						marker.setVisible(false);
					}
				}
			}
			var markersToDisplay = categoryMarkers;
			if(nameMarkers.length > 0) {
				markersToDisplay = nameMarkers;
			}
			var bounds = new google.maps.LatLngBounds();
			for (var i = 0; i < markersToDisplay.length; i++) {
				bounds.extend(markersToDisplay[i].getPosition());
			}

			markerCluster.clearMarkers();
			if(fitBounds) {
				map.fitBounds(bounds);
			}
			
			setTimeout(function(){
					markerCluster.addMarkers(markersToDisplay);
					markerCluster.resetViewport();
			}, 100);
			
		};


		var initFilters = function(map, markers){
			//var input = document.getElementById('category-filters-container1');
			$('#category-filters-container1  input[name="category"]').change(function(){
				//console.log('changing filters');
				var category = 'both';
				if($('#category-filters-container1 [value="dealer"]:checked').length && !$('#category-filters-container1 :checkbox[value="distributor"]:checked').length){
					category = "dealer";
				}else if($('#category-filters-container1 [value="distributor"]:checked').length && !$('#category-filters-container1 :checkbox[value="dealer"]:checked').length){
					category = "distributor";
				}else if(!$('#category-filters-container1 [value="distributor"]:checked').length && !$('#category-filters-container1 :checkbox[value="dealer"]:checked').length){
					category = null;
				}
				//console.log('category:', category);
				filterMarkers(map.markers, category, true);
				updateLocationList(map, markers);
			});
			$('#pac-input-name').keypress(function(e){
				if(e.which === 13){
					filterMarkers(map.markers, 'both', true);
					updateLocationList(map, markers);
				}
			})
		};

		
		var initMapSize = function(){
			var width = $(window).width();
			var height = $(window).height() - 400;
			$('#map').css({width:width, height: height});
			$('#location-list').css({'max-height':height-150});
		};

		var formatAddress = function(location){
			var formattedAddress = "";
			// Set up formatted address
			if(location.address){ formattedAddress += location.address + ' '; }
			if(location.address2){ formattedAddress += location.address2 + ' '; }
			if(location.city){ formattedAddress += location.city + ', '; }
			if(location.state){ formattedAddress += location.state + ' '; }
			if(location.postal){ formattedAddress += location.postal + ' '; }
			if(location.country){ formattedAddress += location.country + ' '; }

			return formattedAddress;
		};

		var updateLocationList = function(map, markers){
			
			$('#location-list > ul').empty();
			
			if(map.getZoom() > 11) {
				var locationList = [];
				for (var i = 0; i < map.markers.length; i++) {
					if (map.markers[i].getVisible()) {
						if (map.map.getBounds().contains(map.markers[i].getPosition())) {
							// code for showing your object, associated with markers[i]
							markers[i].index = i;
							locationList.push(markers[i]);

						}
					}
				}

				locationList.sort(function(a, b) {
					var aLower = a.name.toLowerCase();
					var bLower = b.name.toLowerCase();
					if (aLower < bLower) //sort string ascending
						return -1;
					if (aLower > bLower)
						return 1;
					return 0

				});
				//$('#location-list').toggleClass('in', locationList.length > 0);

				locationList.forEach(function (marker) {
					$('#location-list > ul').append('<li data-markerid="' + marker.index + '">' + marker.name + '<br/>' + formatAddress(marker) + '</li>');
				});
				
				$('#location-list').collapse('show');
				
			}else{
				$('#location-list').collapse('hide');
				setTimeout(function(){
					$('#location-list > ul').html('<li>Zoom in for location list</li>');	
				}, 250);
				
			}
			
		};

		initMapSize();
		$(window).resize(initMapSize);

		var map, markerCluster, locationListToggled = false;
		map = new GMaps({
			el: '#map',
			lat: 37.773972,
			lng: -40.431297,
			zoomControl: true,
			zoomControlOptions: {
				position: google.maps.ControlPosition.RIGHT_CENTER
			},
			mapTypeControl: false,
			styles: [
				{
					featureType: "all",
					stylers: [
						{saturation: -80}
					]
				}, {
					featureType: "road.arterial",
					elementType: "geometry",
					stylers: [
						{hue: "#00ffee"},
						{saturation: 50}
					]
				}, {
					featureType: "poi.business",
					elementType: "labels",
					stylers: [
						{visibility: "off"}
					]
				}
			]
		});
		map.setZoom(3);
		initControls(map.map);
		
		// Try HTML5 geolocation.
		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(function(position) {
				var pos = {
					lat: position.coords.latitude,
					lng: position.coords.longitude
				};
				
				map.setCenter(pos);
				map.setZoom(12);
			}, function() {
				
			});
		} else {
			// Browser doesn't support Geolocation
		
		}
	

		
		
		
		$.ajax('/api/dealers', {
			success: function (data) {
//console.log(data.dealers);
				var mapDealers = [];
				var autoCompleteNames = [];
				var image = {
					url: '../img/marker.png',
					size: new google.maps.Size(32, 32),
					scaledSize: new google.maps.Size(32, 32)
				};
				data.dealers.forEach(function (dealer, i) {
					if (dealer.location) {
						autoCompleteNames.push(data.dealers[i].name);
						data.dealers[i].address = dealer.location.street1;
						data.dealers[i].address2 = dealer.location.street2;
						data.dealers[i].city = dealer.location.suburb;
						data.dealers[i].state = dealer.location.state;
						data.dealers[i].postal = dealer.location.postcode;
						data.dealers[i].category = 'dealer';
						data.dealers[i].icon = image;
						data.dealers[i].icon.url = '../img/marker.png';
						if(dealer.distributor){
							data.dealers[i].category= 'distributor';
							data.dealers[i].icon.url = '../img/marker-orange.png';
						}
						if (dealer.location.geo) {
							data.dealers[i].lng = parseFloat(dealer.location.geo[0]);
							data.dealers[i].lat = parseFloat(dealer.location.geo[1]);
							mapDealers.push(data.dealers[i]);
							var currentDealer = mapDealers[mapDealers.length-1]; 
							map.addMarker({
								lat: currentDealer.lat,
								lng: currentDealer.lng,
								title: dealer.name,
								category: currentDealer.category,
								icon: currentDealer.icon,
								infoWindow: {
									content: '<div style="overflow: auto;"><div class="loc-name">' + currentDealer.name + '</div>\n' +
									'<div>' + formatAddress(currentDealer) + '</div>' +
									'<div>'+ currentDealer.phone +'</div>\n' +
									'<div><a href="" target="_blank"></a></div>\n' +
									'<div><a href="http://maps.google.com/?q='+ formatAddress(currentDealer) +'" target="_blank"><img style="width:24px;" src="//res.cloudinary.com/kaliprotectives-com/image/upload/w_24/v1484794710/dluwwr6oor2qlhfqbumq.png"></a></div>\n' +
									'</div>'
								}
								/*click: function(e) {
									alert('You clicked in this marker');
								}*/
							});
						}
					}
					
					
					autoCompleteNames = autoCompleteNames.sort().filter(function (elem, index, self) {
						return index == self.indexOf(elem);
					})
					$("#pac-input-name").autocomplete({
						source: autoCompleteNames
					}).keyup(function (e) {
						if (e.which === 13) {
							$("#pac-input-name").autocomplete('close');
							//e.stopPropagation()
						}
					});
					/*$( "#pac-input-name" ).on( "autocompleteclose", function( event, ui ) {
						event.stopPropagation();
						filterMarkers(map.markers, 'both');
						updateLocationList(map, mapDealers);
					} );*/
				});

				var styles = [
					{ url: '../img/marker-cluster/m1.png', height: 56, width: 55},
					{ url: '../img/marker-cluster/m2.png', height: 56, width: 55},
					{ url: '../img/marker-cluster/m3.png', height: 56, width: 55},
					{ url: '../img/marker-cluster/m4.png', height: 56, width: 55},
					{ url: '../img/marker-cluster/m5.png', height: 56, width: 55}
						
				];
				markerCluster = new MarkerClusterer(map.map, map.markers, {styles:styles});
				initFilters(map, mapDealers);
				var infowindow = new google.maps.InfoWindow();

				$(document).on('click', '#location-list li', function(e){
					//console.log($(e.target).data('markerid'));
					var gotoMarker = map.markers[$(e.target).data('markerid')];
					map.map.panTo(gotoMarker.getPosition());
					google.maps.event.trigger(gotoMarker, 'click');
					
					if(map.map.getZoom() < 14)
						map.map.setZoom(14);
				});
				$('#pac-input-reset').on('click', function(){
					$('#pac-input-name').val('');
					$('#category-filters-container1 input:checkbox').prop('checked', true);
					filterMarkers(map.markers, 'both');
					updateLocationList(map, mapDealers);
				});
				$('#pac-input-go').on('click', function(){
					if($('pac-input-name:visible').length > 0){
						filterMarkers(map.markers, 'both');
						updateLocationList(map, mapDealers);						
					}else{
						
						/*var keypress = jQuery.Event("keydown");
						keypress.which = 13;
						$('#pac-input').trigger(keypress);*/
					}

				});
				
				//map.map.addListener('center_changed',$.debounce(function(){ updateLocationList(map, mapDealers)}))
				map.map.addListener('bounds_changed',$.debounce(function(){ updateLocationList(map, mapDealers)}));
				updateLocationList(map, mapDealers);
								
			}
		});
    });
</script>
